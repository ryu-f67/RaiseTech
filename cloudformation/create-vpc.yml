AWSTemplateFormatVersion: 2010-09-09

Description: create VPC and subnets for lecture10

Metadata: 
  AWS::CloudFormation::Interface: 
    ParameterGroups: 
      - Label: 
          default: Name base
        Parameters: 
          - Namebase
      - Label: 
          default: Network Config
        Parameters: 
          - VPCCIDR
          - PublicSubnetACIDR
          - PublicSubnetCCIDR
          - PrivateSubnetACIDR
          - PrivateSubnetCCIDR
    ParameterLabels: 
      VPCCIDR: 
        default: VPC CIDR
      PublicSubnetACIDR: 
        default: PublicSubnetA CIDR
      PublicSubnetCCIDR: 
        default: PublicSubnetC CIDR
      PrivateSubnetACIDR: 
        default: PrivateSubnetA CIDR
      PrivateSubnetCCIDR: 
        default: PrivateSubnetC CIDR

Parameters:
  Namebase:
    Type: String
    Default: lecture10
  
  VPCCIDR:
    Type: String
    Default: 192.168.0.0/16

  PublicSubnetACIDR:
    Type: String
    Default: 192.168.0.0/20

  PublicSubnetCCIDR:
    Type: String
    Default: 192.168.16.0/20

  PrivateSubnetACIDR:
    Type: String
    Default: 192.168.128.0/20

  PrivateSubnetCCIDR:
    Type: String
    Default: 192.168.144.0/20

Resources: 
  # VPC作成
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCCIDR
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: !Sub ${Namebase}-vpc
  
  # PublicSubnet作成
  PublicSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: ap-northeast-1a
      CidrBlock: !Ref PublicSubnetACIDR
      MapPublicIpOnLaunch: true
      Tags: 
        - Key: Name
          Value: !Sub ${Namebase}-PublicSubnet-a
      VpcId: !Ref VPC

  PublicSubnetC:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: ap-northeast-1c
      CidrBlock: !Ref PublicSubnetCCIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub ${Namebase}-PublicSubnet-c
      VpcId: !Ref VPC

  # PrivateSubnet作成
  PrivateSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: ap-northeast-1a
      CidrBlock: !Ref PrivateSubnetACIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${Namebase}-PrivateSubnet-a
      VpcId: !Ref VPC

  PrivateSubnetC:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: ap-northeast-1c
      CidrBlock: !Ref PrivateSubnetCCIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub ${Namebase}-PrivateSubnet-c
      VpcId: !Ref VPC
  
  # インターネットゲートウェイ作成
  IGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${Namebase}-igw
  
  AttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref IGW
      VpcId: !Ref VPC

  # ルート作成
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${Namebase}-PublicRouteTable
      VpcId: !Ref VPC
  
  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref IGW
      RouteTableId: !Ref PublicRouteTable
  
  PublicSubnetARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnetA
  
  PublicSubnetCRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnetC
  
  PrivateRouteTableA:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${Namebase}-PrivateRouteTable-A
      VpcId: !Ref VPC

  PrivateSubnetARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTableA
      SubnetId: !Ref PrivateSubnetA
  
  PrivateRouteTableC:
    Type: AWS::EC2::RouteTable
    Properties:
      Tags:
        - Key: Name
          Value: !Sub ${Namebase}-PrivateRouteTable-C
      VpcId: !Ref VPC
  
  PrivateSubnetCRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTableC
      SubnetId: !Ref PrivateSubnetC
  
Outputs:
  VPCId:
    Value: !Ref VPC
    Export:
      Name: VPCId

  PublicSubnetAId:
    Value: !Ref PublicSubnetA
    Export:
      Name: PublicSubnetAId

  PublicSubnetCId:
    Value: !Ref PublicSubnetC
    Export:
      Name: PublicSubnetCId

  PrivateSubnetAId:
    Value: !Ref PrivateSubnetA
    Export:
      Name: PrivateSubnetAId

  PrivateSubnetCId:
    Value: !Ref PrivateSubnetC
    Export:
      Name: PrivateSubnetCId